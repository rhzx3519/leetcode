//
// ----------------------------------------------------------------------
// 背包问题
有一堆硬币，面值分别为coins = {1,2,5...}
求目标面额等于target的组合数量

1. 01背包
for _, c := range coins {
	for i := target; i >= c; i-- { // 遍历顺序不同
		dp[i] += dp[i-c]
	}
}

2. 完全背包
for _, c := range coins {
	for i := c; i <= target; i++ {  // 遍历顺序不同
		dp[i] += dp[i-c]
	}
}


//
// ----------------------------------------------------------------------
// 状态压缩DP
f[mask] 表示状态是mask时对应的系统
```code
// 求mask状态的所有子状态
for subset := mask; subset !=0; subset = (subset - 1)&mask {}
```code

//
// ----------------------------------------------------------------------
// 二维动态规划

```code
	for l := 2;  l <= n; l++ {
		for i := 0; i <= n - l; i++ {
			var j = i + l - 1
			// TODO
		}
	}
```
